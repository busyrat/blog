(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{591:function(t,a,s){"use strict";s.r(a);var n=s(18),r=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-面向对象的-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-面向对象的-javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 面向对象的 JavaScript")]),t._v(" "),s("p",[t._v("JavaScript 这个术语通常涵盖了以下 3 个部分：")]),t._v(" "),s("ul",[s("li",[t._v("ECMAScript")]),t._v(" "),s("li",[t._v("DOM")]),t._v(" "),s("li",[t._v("BOM")])]),t._v(" "),s("p",[t._v("面向对象程序设计（OOP）中最常用到的概念：")]),t._v(" "),s("ul",[s("li",[t._v("对象（实例）、方法、属性")]),t._v(" "),s("li",[t._v("类：需要注意的是，JS中没有类，一切都是基于对象的")]),t._v(" "),s("li",[t._v("封装")]),t._v(" "),s("li",[t._v("聚合")]),t._v(" "),s("li",[t._v("重用与继承：通常是类与类之间的关系，但 JS 中只有对象")]),t._v(" "),s("li",[t._v("多态")])]),t._v(" "),s("h2",{attrs:{id:"_2-基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 基本数据类型")]),t._v(" "),s("p",[t._v("绝大部分值在转换为布尔类型时都为 true，但以下除外：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("空字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 函数")]),t._v(" "),s("h3",{attrs:{id:"_3-2-5-uri的编码与反编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-uri的编码与反编码","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2.5 URI的编码与反编码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.packtpub.com/scr ipt.php?q=this and that'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反过来是 decodeURI")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http://www.packtpub.com/scr%20ipt.php?q=this%20and%20that"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反过来是 decodeURIComponent")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http%3A%2F%2Fwww.packtpub.com%2Fscr%20ipt.php%3Fq%3Dthis%20and%20that"')]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-2-6-eval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6-eval","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2.6 eval")]),t._v(" "),s("p",[t._v("对于许多经验丰富的 JavaScript 程序员来说：eval is evil，因为：")]),t._v(" "),s("ul",[s("li",[t._v("安全性方面，有很多不确定性")]),t._v(" "),s("li",[t._v("性能方面比直接执行脚本要慢")])]),t._v(" "),s("h3",{attrs:{id:"_3-3-变量的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-变量的作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 变量的作用域")]),t._v(" "),s("p",[t._v("在 JavaScript 中，变量的定义并不是以代码块作为作用域的，而是以函数作为作用域。也就是说 if 和 for 循环这样的代码块中，在外面也是可见的。")]),t._v(" "),s("p",[t._v("如果我们声明一个变量时没有使用 var 语句，该变量就会被默认为全局变量。")]),t._v(" "),s("p",[t._v("变量提升。当 JavaScript 执行过程进入新的函数时，这个函数内被声明的所有变量都会被移动(或者说提升)到函数最开始的地方。只有函数体内声明的这些变量在该函数执 行开始时就存在，而与之相关的赋值操作并不会被提升。")]),t._v(" "),s("h3",{attrs:{id:"_3-7-练习题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-练习题","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.7 练习题")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1e1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1e1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1e1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 481")]),t._v("\n")])])]),s("p",[t._v("tip: parseInt可以转换多种进制，但是无法识别指数。")]),t._v(" "),s("p",[t._v("tip2: 进制转换建议使用："),s("code",[t._v("num.toString(radix)")])]),t._v(" "),s("h2",{attrs:{id:"_5-原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-原型","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 原型")]),t._v(" "),s("p",[t._v("每个对象都会有一个构造器，而原型本身也是一个对象，这意味着它必然也有一个构造器，而这个构造器又会有自己的原型。于是这种结构可能会一直不断地持续下去，并最终取决于原型链(prototype chain)的长度，但其最后一环肯定是 Object 内建对象，因为它是最高级的父级对象。")]),t._v(" "),s("p",[t._v("千万要记住，"),s("code",[t._v("__proto__")]),t._v("只能在学习或调试的环境下使用。或者如果你的代码碰巧只需 要在符合 ES5 标准的环境中使用的话，你也可以使用 "),s("code",[t._v("Object.getPrototypeOf()")]),t._v("方法。")]),t._v(" "),s("h3",{attrs:{id:"_5-2-扩展内建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-扩展内建对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.2 扩展内建对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reverse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当我们重写某对象的 prototype 时，需要重置相 应的 constructor 属性。")]),t._v(" "),s("p",[t._v("正如上面所说，出于效率考虑，我们应该尽可能地将一些可重用的属性和方法添加到 原型中去。")])])},[],!1,null,null,null);a.default=r.exports}}]);