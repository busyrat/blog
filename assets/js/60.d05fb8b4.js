(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{563:function(a,t,r){"use strict";r.r(t);var e=r(18),s=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"web-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" WEB 协议")]),a._v(" "),r("h2",{attrs:{id:"第一章：http-1-1-协议-38-讲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一章：http-1-1-协议-38-讲","aria-hidden":"true"}},[a._v("#")]),a._v(" 第一章：HTTP/1.1 协议  (38 讲)")]),a._v(" "),r("h3",{attrs:{id:"_01-课程介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_01-课程介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 01 | 课程介绍")]),a._v(" "),r("h3",{attrs:{id:"_02-内容综述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_02-内容综述","aria-hidden":"true"}},[a._v("#")]),a._v(" 02 | 内容综述")]),a._v(" "),r("h3",{attrs:{id:"_03-浏览器发起-http-请求的典型场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_03-浏览器发起-http-请求的典型场景","aria-hidden":"true"}},[a._v("#")]),a._v(" 03 | 浏览器发起 HTTP 请求的典型场景")]),a._v(" "),r("h3",{attrs:{id:"_04-基于-abnf-语义定义的-http-消息格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_04-基于-abnf-语义定义的-http-消息格式","aria-hidden":"true"}},[a._v("#")]),a._v(" 04 | 基于 ABNF 语义定义的 HTTP 消息格式")]),a._v(" "),r("h3",{attrs:{id:"_05-网络为什么要分层：osi-模型与-tcp-ip-模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_05-网络为什么要分层：osi-模型与-tcp-ip-模型","aria-hidden":"true"}},[a._v("#")]),a._v(" 05 | 网络为什么要分层：OSI 模型与 TCP/IP 模型")]),a._v(" "),r("h3",{attrs:{id:"_06-http-解决了什么问题？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_06-http-解决了什么问题？","aria-hidden":"true"}},[a._v("#")]),a._v(" 06 | HTTP 解决了什么问题？")]),a._v(" "),r("h3",{attrs:{id:"_07-评估-web-架构的七大关键属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_07-评估-web-架构的七大关键属性","aria-hidden":"true"}},[a._v("#")]),a._v(" 07 | 评估 Web 架构的七大关键属性")]),a._v(" "),r("h3",{attrs:{id:"_08-从五种架构风格推导出-http-的-rest-架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_08-从五种架构风格推导出-http-的-rest-架构","aria-hidden":"true"}},[a._v("#")]),a._v(" 08 | 从五种架构风格推导出 HTTP 的 REST 架构")]),a._v(" "),r("h3",{attrs:{id:"_09-如何用-chrome-的-network-面板分析-http-报文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_09-如何用-chrome-的-network-面板分析-http-报文","aria-hidden":"true"}},[a._v("#")]),a._v(" 09 | 如何用 Chrome 的 Network 面板分析 HTTP 报文")]),a._v(" "),r("h3",{attrs:{id:"_10-uri-的基本格式以及与-url-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-uri-的基本格式以及与-url-的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" 10 | URI 的基本格式以及与 URL 的区别")]),a._v(" "),r("h3",{attrs:{id:"_11-为什么要对-uri-进行编码？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-为什么要对-uri-进行编码？","aria-hidden":"true"}},[a._v("#")]),a._v(" 11 | 为什么要对 URI 进行编码？")]),a._v(" "),r("h3",{attrs:{id:"_12-详解-http-的请求行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-详解-http-的请求行","aria-hidden":"true"}},[a._v("#")]),a._v(" 12 | 详解 HTTP 的请求行")]),a._v(" "),r("h3",{attrs:{id:"_13-http-的正确响应码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-http-的正确响应码","aria-hidden":"true"}},[a._v("#")]),a._v(" 13 | HTTP 的正确响应码")]),a._v(" "),r("h3",{attrs:{id:"_14-http-的错误响应码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-http-的错误响应码","aria-hidden":"true"}},[a._v("#")]),a._v(" 14 | HTTP 的错误响应码")]),a._v(" "),r("h3",{attrs:{id:"_15-如何管理跨代理服务器的长短连接？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-如何管理跨代理服务器的长短连接？","aria-hidden":"true"}},[a._v("#")]),a._v(" 15 | 如何管理跨代理服务器的长短连接？")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Connection 头部 （HTTP/1.1 才有）")]),a._v(" "),r("ul",[r("li",[a._v("Keep-Alive：长连接\n"),r("ul",[r("li",[a._v("客户端请求长连接："),r("code",[a._v("Connection: Keep-Alive")])]),a._v(" "),r("li",[a._v("服务端表示支持长连接："),r("code",[a._v("Connection: Keep-Alive")])]),a._v(" "),r("li",[a._v("客户端复用连接")]),a._v(" "),r("li",[a._v("HTTP/1.1 默认支持长连接")])])]),a._v(" "),r("li",[a._v("Close：短连接")]),a._v(" "),r("li",[a._v("对代理服务器的要求：不转发 Connection 列出头部，"),r("strong",[a._v("该头部仅与当前连接相关")])])])]),a._v(" "),r("li",[r("p",[a._v("Proxy-Connection")]),a._v(" "),r("ul",[r("li",[a._v("陈旧的代理服务器不识别该头部，退化为短连接")]),a._v(" "),r("li",[a._v("新版本的代理服务器理解该头部，用 Connection 代替 Proxy-Connection")])])]),a._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://juejin.im/post/5c7b1be9f265da2dac4568a2",target:"_blank",rel:"noopener noreferrer"}},[a._v("NodeJS 长连接"),r("OutboundLink")],1)]),a._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" request "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"request"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("request")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    method"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"GET"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    uri"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://xxx:8887/xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    time"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 配置这个属性可以看到时间信息")]),a._v("\n    forever"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 配置这个开启长连接")]),a._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("error"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" response"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" body")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v('"timingPhases"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" response"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("timingPhases"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])]),a._v(" "),r("h3",{attrs:{id:"_16-http-消息在服务器端的路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-http-消息在服务器端的路由","aria-hidden":"true"}},[a._v("#")]),a._v(" 16 | HTTP 消息在服务器端的路由")]),a._v(" "),r("ul",[r("li",[r("p",[a._v('Host = uri-host[":" port]')]),a._v(" "),r("ul",[r("li",[a._v("HTTP/1.1 规范要求，不传递 Host 头部则返回 400 错误响应码")]),a._v(" "),r("li",[a._v("域名众多，IP 相对来说不多")]),a._v(" "),r("li",[a._v("为防止陈旧的代理服务器，发向正向代理的请求 request-target 必须 以 absolute-form 形式出现\n"),r("ul",[r("li",[a._v("request-line = method SP request-target SP HTTP-version CRLF")]),a._v(" "),r("li",[a._v("absolute-form = absolute-URI\n"),r("ul",[r("li",[a._v('absolute-URI = scheme ":" hier-part ["?"query]')])])])])])])])]),a._v(" "),r("h3",{attrs:{id:"_17-代理服务器转发消息时的相关头部"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-代理服务器转发消息时的相关头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 17 | 代理服务器转发消息时的相关头部")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("如何传递 IP 地址")]),a._v(" "),r("ul",[r("li",[a._v("TCP 连接四元组")]),a._v(" "),r("li",[a._v("HTTP 头部 "),r("code",[a._v("X-Forwarded-For")]),a._v(" 用于传递 IP，可以有多个，用逗号分割")]),a._v(" "),r("li",[a._v("HTTP 头部 "),r("code",[a._v("X-Real-IP")]),a._v(" 用于传递用户 IP")]),a._v(" "),r("li",[a._v("网络中存在许多反向代理")])])]),a._v(" "),r("li",[r("p",[a._v("消息的转发")]),a._v(" "),r("ul",[r("li",[r("code",[a._v("Max-Forwards")]),a._v("：限制 Proxy 代理服务器的最大转发次数")]),a._v(" "),r("li",[r("code",[a._v("Via")]),a._v(" 头部：指明经过的代理服务器名称及版本")]),a._v(" "),r("li",[r("code",[a._v("Cache-Control: no-transform")]),a._v("：禁止代理服务器修改响应包体")])])])]),a._v(" "),r("h3",{attrs:{id:"_18-请求与响应的上下文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-请求与响应的上下文","aria-hidden":"true"}},[a._v("#")]),a._v(" 18 | 请求与响应的上下文")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("请求的上下文：")]),a._v(" "),r("ul",[r("li",[r("code",[a._v("User-Agent")])]),a._v(" "),r("li",[r("code",[a._v("Referer")]),a._v(" 浏览器对来自某一页面的请求自动添加的头部\n"),r("ul",[r("li",[a._v("服务器端常用于统计分析、缓存优化、防盗链等功能")]),a._v(" "),r("li",[a._v("Referer 不会被添加的场景\n"),r("ul",[r("li",[a._v("来源页面采用的协议为表示本地文件的 file")]),a._v(" "),r("li",[a._v("当请求页面采用 http 协议，而来源页面采用的是 https 协议")])])])])])])]),a._v(" "),r("li",[r("p",[a._v("响应的上下文")]),a._v(" "),r("ul",[r("li",[r("code",[a._v("Server")])]),a._v(" "),r("li",[r("code",[a._v("Allow")]),a._v(" 告诉客户端，服务器上该 URI 对应的资源允许哪些方法的执行")]),a._v(" "),r("li",[r("code",[a._v("Accept-Ranges")]),a._v(" 告诉客户端服务器上该资源是否允许 range 请求")])])])]),a._v(" "),r("h3",{attrs:{id:"_19-内容协商与资源表述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-内容协商与资源表述","aria-hidden":"true"}},[a._v("#")]),a._v(" 19 | 内容协商与资源表述")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("内容协商\n每个 URI 指向的资源可以是任何事物，可以有多种不同的表述，例如不同的语言、不同的媒体格式、不同的编码等")])]),a._v(" "),r("li",[r("p",[a._v("Proactive 主动式内容协商")]),a._v(" "),r("ul",[r("li",[a._v("质量因子 q：内容的质量、可接受类型的优先级")]),a._v(" "),r("li",[a._v("媒体资源 MIME 类型及质量因子\n"),r("ul",[r("li",[a._v("Accept")]),a._v(" "),r("li",[a._v("Accept-Charset")]),a._v(" "),r("li",[a._v("Accept-Encoding")]),a._v(" "),r("li",[a._v("Accept-Langugage")])])]),a._v(" "),r("li",[a._v("响应，元数据头部\n"),r("ul",[r("li",[a._v("媒体类型、编码：content-type")]),a._v(" "),r("li",[a._v("内容编码：content-encoding")]),a._v(" "),r("li",[a._v("语言：Content-language")])])])])]),a._v(" "),r("li",[r("p",[a._v("Reactive 响应式内容协商，没有统一，很少使用")])])]),a._v(" "),r("h3",{attrs:{id:"_20-http-包体的传输方式（1）：定长包体"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-http-包体的传输方式（1）：定长包体","aria-hidden":"true"}},[a._v("#")]),a._v(" 20 | HTTP 包体的传输方式（1）：定长包体")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("请求或者响应都可以携带包体")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("HTTP-message = start-line *(header-field CRLF) CRLF [message-body]")]),a._v(" "),r("ul",[r("li",[a._v("message-body = *OCTET：二进制字节流，且必须与实际传输的长度一致")])])]),a._v(" "),r("li",[r("p",[a._v("以下消息不能含有包体")]),a._v(" "),r("ul",[r("li",[a._v("HEAD 方法请求对应的响应")]),a._v(" "),r("li",[a._v("1xx、204、304 对应的响应")]),a._v(" "),r("li",[a._v("CONNECT 方法对应的 2xx 响应")])])]),a._v(" "),r("li",[r("p",[a._v("使用 Content-Length 头部明确指明包体长度")]),a._v(" "),r("ul",[r("li",[a._v("Content-Length = 1 *DIGIT (字节个数)")]),a._v(" "),r("li",[a._v("当数字小于实际包体长度的时候，超过的数据客户端会丢掉；如果大于了，浏览器就会抛错")])])])])])]),a._v(" "),r("h3",{attrs:{id:"_21-http-包体的传输方式（2）：不定长包体"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-http-包体的传输方式（2）：不定长包体","aria-hidden":"true"}},[a._v("#")]),a._v(" 21 | HTTP 包体的传输方式（2）：不定长包体")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("不能确定包体的全部长度")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("使用 "),r("code",[a._v("Transfer-Encoding")]),a._v("头部指明使用 "),r("code",[a._v("Chunk")]),a._v(" 传输方式")])]),a._v(" "),r("li",[r("p",[a._v("优点：")]),a._v(" "),r("ul",[r("li",[a._v("基于长连接持续推送动态内容")]),a._v(" "),r("li",[a._v("压缩体积较大的包体时，不必完全压缩完再发送，可以边发送变压缩")]),a._v(" "),r("li",[a._v("传递必须在包体传输完才能计算出的 Trailer 头部")])])]),a._v(" "),r("li",[r("p",[a._v("头部："),r("code",[a._v('transfer-coding = "chunked"')])]),a._v(" "),r("ul",[r("li",[a._v("chunked-body = *chunk last-chunk trailer-part CRLF\n"),r("ul",[r("li",[a._v("chunk = chunk-size[chunk-ext] CRLF chunk-data CRLF")]),a._v(" "),r("li",[a._v('last-chunk = 1 * ("0")[chunk-ext] CRLF')]),a._v(" "),r("li",[a._v("trailer-part = * (header-field CRLF)")])])])])]),a._v(" "),r("li",[r("p",[a._v("Trailer 头部的传输，很多浏览器还不支持")]),a._v(" "),r("ul",[r("li",[a._v("TE 头部：客户端的请求在声明是否接收 Trailer 头部 "),r("code",[a._v("TE: trailers")])]),a._v(" "),r("li",[a._v("Trailer 头部：服务器告知接下来 chunk 包体后会传输哪些 Trailer 头部")])])])])]),a._v(" "),r("li",[r("p",[a._v("Content-Disposition")]),a._v(" "),r("ul",[r("li",[r("p",[a._v('disposition-type = "inline" | "attachment" | disp-ext-type')]),a._v(" "),r("ul",[r("li",[a._v("inline：指定包体是以内联的方式，作为页面的一部分展示")]),a._v(" "),r("li",[a._v("attachment：指定浏览器将包体以附件的方式下载 -例如："),r("code",[a._v('Content-Disposition: attachment; filename="aaa.jpg"')])])])])])])]),a._v(" "),r("h3",{attrs:{id:"_22-html-form-表单提交时的协议格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-html-form-表单提交时的协议格式","aria-hidden":"true"}},[a._v("#")]),a._v(" 22 | HTML form 表单提交时的协议格式")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Form 表单：HTML 中的元素，提供了交互控制元件用来向服务器通过 HTTTP 协议提交信息，常见控件有：")]),a._v(" "),r("ul",[r("li",[a._v("Text Input")]),a._v(" "),r("li",[a._v("Checkboxes")]),a._v(" "),r("li",[a._v("Radio")]),a._v(" "),r("li",[a._v("Select")]),a._v(" "),r("li",[a._v("File")]),a._v(" "),r("li",[a._v("Clickable Button")]),a._v(" "),r("li",[a._v("Submit and Reset Button")])])]),a._v(" "),r("li",[r("p",[a._v("关键属性")]),a._v(" "),r("ul",[r("li",[a._v("action：提交时发起 HTTP 请求的 URI")]),a._v(" "),r("li",[a._v("method：post / get")]),a._v(" "),r("li",[a._v("enctype：在 POST 方法下，对表单内容在请求包体中的编码方式\n"),r("ul",[r("li",[a._v("application/x-www-form-urlencoded 默认的")]),a._v(" "),r("li",[a._v("multipart/form-data\n"),r("ul",[r("li",[a._v("boundary 分隔符")]),a._v(" "),r("li",[a._v("每部分表述皆有 HTTP 头部描述子包体")]),a._v(" "),r("li",[a._v("last boundary 结尾")])])])])])])]),a._v(" "),r("li",[r("p",[a._v("multipart：一个包体中多个资源表述")]),a._v(" "),r("ul",[r("li",[a._v("Content-type 头部指明这是个多表述包体\n"),r("ul",[r("li",[a._v("Content-type: multipart/form-data;")])])])])])]),a._v(" "),r("h3",{attrs:{id:"_23-断点续传与多线程下载是如何做到的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-断点续传与多线程下载是如何做到的？","aria-hidden":"true"}},[a._v("#")]),a._v(" 23 | 断点续传与多线程下载是如何做到的？^")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("多线程、断点续传、随机点播等场景的步骤")]),a._v(" "),r("ul",[r("li",[a._v("客户端明确任务：从哪开始下载\n"),r("ul",[r("li",[a._v("本地是否已有部分文件\n"),r("ul",[r("li",[a._v("文件已下载部分在服务器端发生改变？")])])]),a._v(" "),r("li",[a._v("使用几个线程并发下载")])])]),a._v(" "),r("li",[a._v("下载文件的指定部分内容")]),a._v(" "),r("li",[a._v("下载完毕后拼装成统一的文件")])])])]),a._v(" "),r("h3",{attrs:{id:"_24-cookie-的格式与约束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-cookie-的格式与约束","aria-hidden":"true"}},[a._v("#")]),a._v(" 24 | Cookie 的格式与约束")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Cookie 头部可以存放多个 name/value 名值对")]),a._v(" "),r("ul",[r("li",[a._v('cookie-header = "Cookie:" OWS cookie-string OWS\n'),r("ul",[r("li",[a._v('cookie-string = cookie-pair *(";" SP cookie-pair)\n'),r("ul",[r("li",[a._v('cookie-pair = cookie-name "=" cookie-value')])])])])])])]),a._v(" "),r("li",[r("p",[a._v("Set-Cookie 头部一次只能传递一个 name/value 名值对，响应中可以含多个头部")]),a._v(" "),r("ul",[r("li",[a._v('set-cookie-header = "Set-Cookie:" SP set-cookie-string\n'),r("ul",[r("li",[a._v('set-cookie-string = cookie-pair *(";" SP cookie-av)\n'),r("ul",[r("li",[a._v("cookie-av = 描述 cookie-pair 的可选属性")])])])])])])]),a._v(" "),r("li",[r("p",[a._v("cookie-av = expires-av / max-age-av / domain-av / path-av / secure-av / httponly-av / extension-av")]),a._v(" "),r("ul",[r("li",[a._v('httponly-av = "HttpOnly"：不能使用 JS（Document.cookie、XMLHttpRequest、Request APIS）访问到 cookie')])])]),a._v(" "),r("li",[r("p",[a._v("设计上的问题")]),a._v(" "),r("ul",[r("li",[a._v("Cookie 会被附加在每个 HTTP 请求中，所以无形中增加了流量")]),a._v(" "),r("li",[a._v("明文传输")]),a._v(" "),r("li",[a._v("上限 4KB，对于复杂的存储需要来说不够用")])])])]),a._v(" "),r("h3",{attrs:{id:"_25-session-及第三方-cookie-的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-session-及第三方-cookie-的工作原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 25 | Session 及第三方 Cookie 的工作原理")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/busyrat/picgo/master/20200521103407.png",alt:""}})]),a._v(" "),r("ul",[r("li",[r("p",[a._v("第三方 Cookie")]),a._v(" "),r("ul",[r("li",[a._v("浏览器允许对于不安全域下的资源（如广告图片）响应中的 Set-Cookie 保存，并在后续访问该域时自动使用 Cookie")])])])]),a._v(" "),r("h3",{attrs:{id:"_26-浏览器为什么要有同源策略？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_26-浏览器为什么要有同源策略？","aria-hidden":"true"}},[a._v("#")]),a._v(" 26 | 浏览器为什么要有同源策略？")]),a._v(" "),r("p",[a._v("同一个浏览器发出的请求，未必都是用户自愿发出的请求")]),a._v(" "),r("p",[a._v("同源：协议、主机、端口 三者必须完全相同")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("安全性与可用性需要一个平衡点")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("可用性：HTML 决定跨域请求是否对本站点安全")]),a._v(" "),r("ul",[r("li",[a._v("script \\ img \\ iframe \\ link \\ video \\ audio")]),a._v(" "),r("li",[a._v("允许跨域写操作：例如表单提交或者重定向请求\n"),r("ul",[r("li",[a._v("CSRF 安全性问题")])])])])]),a._v(" "),r("li",[r("p",[a._v("安全性：浏览器需要防止站点 A 的脚本向站点 B 发起危险动作")]),a._v(" "),r("ul",[r("li",[a._v("Cookie \\ LocalStorage 和 IndexDB")]),a._v(" "),r("li",[a._v("DOM 无法获得")]),a._v(" "),r("li",[a._v("AJAX 请求不能发送")])])])])]),a._v(" "),r("li",[r("p",[a._v("CSRF 利用表单跨域写")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/busyrat/picgo/master/20200521110006.png",alt:""}})]),a._v(" "),r("p",[a._v("真正的服务可以查看 Referer 头验证，如果浏览器不支持 Refeer 就无法防止。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/busyrat/picgo/master/20200521110211.png",alt:""}})])])]),a._v(" "),r("h3",{attrs:{id:"_27-如何“合法”地跨域访问？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_27-如何“合法”地跨域访问？","aria-hidden":"true"}},[a._v("#")]),a._v(" 27 | 如何“合法”地跨域访问？")]),a._v(" "),r("p",[a._v("CORS：Cross-Origin Resource Sharing")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("浏览器同源策略下的跨域访问解决方案")]),a._v(" "),r("ul",[r("li",[a._v("如果站点 A 允许站点 B 的脚本访问其资源，必须在 HTTP 响应中显式的告知浏览器：站点 B 是被允许的")]),a._v(" "),r("li",[a._v("策略 1：何为简单请求\n"),r("ul",[r("li",[a._v("GET / HEAD / POST 方法之一")]),a._v(" "),r("li",[a._v("仅能使用 CORS 安全的头部：\n"),r("ul",[r("li",[a._v("Accept")]),a._v(" "),r("li",[a._v("Accept-Language")]),a._v(" "),r("li",[a._v("Content-Language")]),a._v(" "),r("li",[a._v("Content-Type")])])]),a._v(" "),r("li",[a._v("Content-Type 只能是三者其中之一：\n"),r("ul",[r("li",[a._v("text/plain")]),a._v(" "),r("li",[a._v("multipart/form-data")]),a._v(" "),r("li",[a._v("application/x-www-form-urlencoded")])])])])]),a._v(" "),r("li",[a._v("策略 2：简单请求以外的请求\n"),r("ul",[r("li",[a._v("访问资源前，需要先发起 prefilght 预检请求（方法为 OPTIONS）询问何种请求是被允许的")])])])])]),a._v(" "),r("li",[r("p",[a._v("nginx 相关配置举例")]),a._v(" "),r("div",{staticClass:"language-nginx extra-class"},[r("pre",{pre:!0,attrs:{class:"language-nginx"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("location")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("add_header")]),a._v(" Access"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Control"),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("Allow")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Origin "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://main.com'")]),a._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),r("li",[r("p",[a._v("非简单跨域")]),a._v(" "),r("ul",[r("li",[a._v("请求头部\n"),r("ul",[r("li",[a._v("Access-Control-Request-Method")]),a._v(" "),r("li",[a._v("Access-Control-Request-Header")])])]),a._v(" "),r("li",[a._v("响应头部\n"),r("ul",[r("li",[a._v("Access-Control-Allow-Methods")]),a._v(" "),r("li",[a._v("Access-Control-Allow-Headers")]),a._v(" "),r("li",[a._v("Access-Control-Max-Age")]),a._v(" "),r("li",[a._v("Access-Control-Expose-Headers")]),a._v(" "),r("li",[a._v("Access-Control-Allow-Origin")]),a._v(" "),r("li",[a._v("Access-Control-Allow-Credentials")])])])])])]),a._v(" "),r("h3",{attrs:{id:"_28-条件请求的作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_28-条件请求的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" 28 | 条件请求的作用")]),a._v(" "),r("h3",{attrs:{id:"_29-缓存的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_29-缓存的工作原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 29 | 缓存的工作原理")]),a._v(" "),r("h3",{attrs:{id:"_30-缓存新鲜度的四种计算方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_30-缓存新鲜度的四种计算方式","aria-hidden":"true"}},[a._v("#")]),a._v(" 30 | 缓存新鲜度的四种计算方式")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("response_is_fresh = (freshness_lifetime > current_age)")]),a._v(" "),r("ul",[r("li",[a._v("freshness_lifetime：按优先级，取以下响应头部的值\n"),r("ul",[r("li",[a._v("s-maxage > max-age > Expires > 预估过期时间\n"),r("ul",[r("li",[a._v("通常的服务端都没有配置 max-age 等，所以浏览器有个预估过期时间：(DownloadTime - LastModified) * 10%")])])])])])])]),a._v(" "),r("li",[r("p",[a._v("Age 表示自源服务器发出响应（或者验证过期混存），到使用缓存的响应发出时经过的秒数")])])]),a._v(" "),r("h3",{attrs:{id:"_31-复杂的-cache-control-头部"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_31-复杂的-cache-control-头部","aria-hidden":"true"}},[a._v("#")]),a._v(" 31 | 复杂的 Cache-Control 头部")]),a._v(" "),r("h3",{attrs:{id:"_32-什么样的响应才会被缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_32-什么样的响应才会被缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 32 | 什么样的响应才会被缓存")]),a._v(" "),r("h3",{attrs:{id:"_33-多种重定向跳转方式的差异"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_33-多种重定向跳转方式的差异","aria-hidden":"true"}},[a._v("#")]),a._v(" 33 | 多种重定向跳转方式的差异")]),a._v(" "),r("h3",{attrs:{id:"_34-如何通过-http-隧道访问被限制的网络"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_34-如何通过-http-隧道访问被限制的网络","aria-hidden":"true"}},[a._v("#")]),a._v(" 34 | 如何通过 HTTP 隧道访问被限制的网络")]),a._v(" "),r("h3",{attrs:{id:"_35-网络爬虫的工作原理与应对方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_35-网络爬虫的工作原理与应对方式","aria-hidden":"true"}},[a._v("#")]),a._v(" 35 | 网络爬虫的工作原理与应对方式")]),a._v(" "),r("h3",{attrs:{id:"_36-http-协议的基本认证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_36-http-协议的基本认证","aria-hidden":"true"}},[a._v("#")]),a._v(" 36 | HTTP 协议的基本认证")]),a._v(" "),r("h3",{attrs:{id:"_37-wireshark-的基本用法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_37-wireshark-的基本用法","aria-hidden":"true"}},[a._v("#")]),a._v(" 37 | Wireshark 的基本用法")]),a._v(" "),r("h3",{attrs:{id:"_38-如何通过-dns-协议解析域名？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_38-如何通过-dns-协议解析域名？","aria-hidden":"true"}},[a._v("#")]),a._v(" 38 | 如何通过 DNS 协议解析域名？")]),a._v(" "),r("h2",{attrs:{id:"第二章：websocket-协议-10-讲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第二章：websocket-协议-10-讲","aria-hidden":"true"}},[a._v("#")]),a._v(" 第二章：WebSocket 协议  (10 讲)")]),a._v(" "),r("h3",{attrs:{id:"_39-wireshark-的捕获过滤器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_39-wireshark-的捕获过滤器","aria-hidden":"true"}},[a._v("#")]),a._v(" 39 | Wireshark 的捕获过滤器")]),a._v(" "),r("h3",{attrs:{id:"_40-wireshark-的显示过滤器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_40-wireshark-的显示过滤器","aria-hidden":"true"}},[a._v("#")]),a._v(" 40 | Wireshark 的显示过滤器")]),a._v(" "),r("h3",{attrs:{id:"_41-websocket-解决什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_41-websocket-解决什么问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 41 | Websocket 解决什么问题")]),a._v(" "),r("h3",{attrs:{id:"_42-websocket-的约束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_42-websocket-的约束","aria-hidden":"true"}},[a._v("#")]),a._v(" 42 | Websocket 的约束")]),a._v(" "),r("h3",{attrs:{id:"_43-websocket-协议格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_43-websocket-协议格式","aria-hidden":"true"}},[a._v("#")]),a._v(" 43 | WebSocket 协议格式")]),a._v(" "),r("h3",{attrs:{id:"_44-如何从-http-升级到-websocket"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_44-如何从-http-升级到-websocket","aria-hidden":"true"}},[a._v("#")]),a._v(" 44 | 如何从 HTTP 升级到 WebSocket")]),a._v(" "),r("h3",{attrs:{id:"_45-传递消息时的编码格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_45-传递消息时的编码格式","aria-hidden":"true"}},[a._v("#")]),a._v(" 45 | 传递消息时的编码格式")]),a._v(" "),r("h3",{attrs:{id:"_46-掩码及其所针对的代理污染攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_46-掩码及其所针对的代理污染攻击","aria-hidden":"true"}},[a._v("#")]),a._v(" 46 | 掩码及其所针对的代理污染攻击")]),a._v(" "),r("h3",{attrs:{id:"_47-如何保持会话心跳"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_47-如何保持会话心跳","aria-hidden":"true"}},[a._v("#")]),a._v(" 47 | 如何保持会话心跳")]),a._v(" "),r("h3",{attrs:{id:"_48-如何关闭会话"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_48-如何关闭会话","aria-hidden":"true"}},[a._v("#")]),a._v(" 48 | 如何关闭会话")]),a._v(" "),r("h2",{attrs:{id:"第三章：http-2-协议-21-讲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第三章：http-2-协议-21-讲","aria-hidden":"true"}},[a._v("#")]),a._v(" 第三章：HTTP/2 协议  (21 讲)")]),a._v(" "),r("h3",{attrs:{id:"_49-http-1-1-发展中遇到的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_49-http-1-1-发展中遇到的问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 49 | HTTP/1.1 发展中遇到的问题")]),a._v(" "),r("h3",{attrs:{id:"_50-http-2-特性概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_50-http-2-特性概述","aria-hidden":"true"}},[a._v("#")]),a._v(" 50 | HTTP/2 特性概述")]),a._v(" "),r("h3",{attrs:{id:"_51-如何使用-wireshark-解密-tls-ssl-报文？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_51-如何使用-wireshark-解密-tls-ssl-报文？","aria-hidden":"true"}},[a._v("#")]),a._v(" 51 | 如何使用 Wireshark 解密 TLS/SSL 报文？")]),a._v(" "),r("h3",{attrs:{id:"_52-h2c：在-tcp-上从-http-1-升级到-http-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_52-h2c：在-tcp-上从-http-1-升级到-http-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 52 | h2c：在 TCP 上从 HTTP/1 升级到 HTTP/2")]),a._v(" "),r("h3",{attrs:{id:"_53-h2：在-tls-上从-http-1-升级到-http-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_53-h2：在-tls-上从-http-1-升级到-http-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 53 | h2：在 TLS 上从 HTTP/1 升级到 HTTP/2")]),a._v(" "),r("h3",{attrs:{id:"_54-帧、消息、流的关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_54-帧、消息、流的关系","aria-hidden":"true"}},[a._v("#")]),a._v(" 54 | 帧、消息、流的关系")]),a._v(" "),r("h3",{attrs:{id:"_55-帧格式：stream-流-id-的作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_55-帧格式：stream-流-id-的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" 55 | 帧格式：Stream 流 ID 的作用")]),a._v(" "),r("h3",{attrs:{id:"_56-帧格式：帧类型及设置帧的子类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_56-帧格式：帧类型及设置帧的子类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 56 | 帧格式：帧类型及设置帧的子类型")]),a._v(" "),r("h3",{attrs:{id:"_57-hpack-如何减少-http-头部的大小？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_57-hpack-如何减少-http-头部的大小？","aria-hidden":"true"}},[a._v("#")]),a._v(" 57 | HPACK 如何减少 HTTP 头部的大小？")]),a._v(" "),r("h3",{attrs:{id:"_58-hpack-中如何使用-huffman-树编码？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_58-hpack-中如何使用-huffman-树编码？","aria-hidden":"true"}},[a._v("#")]),a._v(" 58 | HPACK 中如何使用 Huffman 树编码？")]),a._v(" "),r("h3",{attrs:{id:"_59-hpack-中整型数字的编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_59-hpack-中整型数字的编码","aria-hidden":"true"}},[a._v("#")]),a._v(" 59 | HPACK 中整型数字的编码")]),a._v(" "),r("h3",{attrs:{id:"_60-hpack-中头部名称与值的编码格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_60-hpack-中头部名称与值的编码格式","aria-hidden":"true"}},[a._v("#")]),a._v(" 60 | HPACK 中头部名称与值的编码格式")]),a._v(" "),r("h3",{attrs:{id:"_61-服务器端的主动消息推送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_61-服务器端的主动消息推送","aria-hidden":"true"}},[a._v("#")]),a._v(" 61 | 服务器端的主动消息推送")]),a._v(" "),r("h3",{attrs:{id:"_62-stream-的状态变迁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_62-stream-的状态变迁","aria-hidden":"true"}},[a._v("#")]),a._v(" 62 | Stream 的状态变迁")]),a._v(" "),r("h3",{attrs:{id:"_63-rst-stream-帧及常见错误码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_63-rst-stream-帧及常见错误码","aria-hidden":"true"}},[a._v("#")]),a._v(" 63 | RST_STREAM 帧及常见错误码")]),a._v(" "),r("h3",{attrs:{id:"_64-我们需要-stream-优先级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_64-我们需要-stream-优先级","aria-hidden":"true"}},[a._v("#")]),a._v(" 64 | 我们需要 Stream 优先级")]),a._v(" "),r("h3",{attrs:{id:"_65-不同于-tcp-的流量控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_65-不同于-tcp-的流量控制","aria-hidden":"true"}},[a._v("#")]),a._v(" 65 | 不同于 TCP 的流量控制")]),a._v(" "),r("h3",{attrs:{id:"_66-http-2-与-grpc-框架"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_66-http-2-与-grpc-框架","aria-hidden":"true"}},[a._v("#")]),a._v(" 66 | HTTP/2 与 gRPC 框架")]),a._v(" "),r("h3",{attrs:{id:"_67-http-2-的问题及-http-3-的意义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_67-http-2-的问题及-http-3-的意义","aria-hidden":"true"}},[a._v("#")]),a._v(" 67 | HTTP/2 的问题及 HTTP/3 的意义")]),a._v(" "),r("h3",{attrs:{id:"_68-http-3-quic-协议格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_68-http-3-quic-协议格式","aria-hidden":"true"}},[a._v("#")]),a._v(" 68 | HTTP/3: QUIC 协议格式")]),a._v(" "),r("h3",{attrs:{id:"_69-七层负载均衡做了些什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_69-七层负载均衡做了些什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" 69 | 七层负载均衡做了些什么？")]),a._v(" "),r("h2",{attrs:{id:"第四章：tls-ssl-协议-14-讲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第四章：tls-ssl-协议-14-讲","aria-hidden":"true"}},[a._v("#")]),a._v(" 第四章：TLS/SSL 协议  (14 讲)")]),a._v(" "),r("h3",{attrs:{id:"_70-tls-协议的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_70-tls-协议的工作原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 70 | TLS 协议的工作原理")]),a._v(" "),r("h3",{attrs:{id:"_71-对称加密的工作原理（1）：xor-与填充"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_71-对称加密的工作原理（1）：xor-与填充","aria-hidden":"true"}},[a._v("#")]),a._v(" 71 | 对称加密的工作原理（1）：XOR 与填充")]),a._v(" "),r("h3",{attrs:{id:"_72-对称加密的工作原理（2）：工作模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_72-对称加密的工作原理（2）：工作模式","aria-hidden":"true"}},[a._v("#")]),a._v(" 72 | 对称加密的工作原理（2）：工作模式")]),a._v(" "),r("h3",{attrs:{id:"_73-详解-aes-对称加密算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_73-详解-aes-对称加密算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 73 | 详解 AES 对称加密算法")]),a._v(" "),r("h3",{attrs:{id:"_74-非对称密码与-rsa-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_74-非对称密码与-rsa-算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 74 | 非对称密码与 RSA 算法")]),a._v(" "),r("h3",{attrs:{id:"_75-基于-openssl-实战验证-rsa"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_75-基于-openssl-实战验证-rsa","aria-hidden":"true"}},[a._v("#")]),a._v(" 75 | 基于 openssl 实战验证 RSA")]),a._v(" "),r("h3",{attrs:{id:"_76-非对称密码应用：pki-证书体系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_76-非对称密码应用：pki-证书体系","aria-hidden":"true"}},[a._v("#")]),a._v(" 76 | 非对称密码应用：PKI 证书体系")]),a._v(" "),r("h3",{attrs:{id:"_77-非对称密码应用：dh-密钥交换协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_77-非对称密码应用：dh-密钥交换协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 77 | 非对称密码应用：DH 密钥交换协议")]),a._v(" "),r("h3",{attrs:{id:"_78-ecc-椭圆曲线的特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_78-ecc-椭圆曲线的特性","aria-hidden":"true"}},[a._v("#")]),a._v(" 78 | ECC 椭圆曲线的特性")]),a._v(" "),r("h3",{attrs:{id:"_79-dh-协议升级：基于椭圆曲线的-ecdh-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_79-dh-协议升级：基于椭圆曲线的-ecdh-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 79 | DH 协议升级：基于椭圆曲线的 ECDH 协议")]),a._v(" "),r("h3",{attrs:{id:"_80-tls1-2-与-tls1-3-中的-ecdh-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_80-tls1-2-与-tls1-3-中的-ecdh-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 80 | TLS1.2 与 TLS1.3 中的 ECDH 协议")]),a._v(" "),r("h3",{attrs:{id:"_81-握手的优化：session-缓存、ticket-票据及-tls1-3-的-0-rtt"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_81-握手的优化：session-缓存、ticket-票据及-tls1-3-的-0-rtt","aria-hidden":"true"}},[a._v("#")]),a._v(" 81 | 握手的优化：session 缓存、ticket 票据及 TLS1.3 的 0-RTT")]),a._v(" "),r("h3",{attrs:{id:"_82-tls-与量子通讯的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_82-tls-与量子通讯的原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 82 | TLS 与量子通讯的原理")]),a._v(" "),r("h3",{attrs:{id:"_83-量子通讯-bb84-协议的执行流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_83-量子通讯-bb84-协议的执行流程","aria-hidden":"true"}},[a._v("#")]),a._v(" 83 | 量子通讯 BB84 协议的执行流程")]),a._v(" "),r("h2",{attrs:{id:"第五章：tcp-协议-25-讲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第五章：tcp-协议-25-讲","aria-hidden":"true"}},[a._v("#")]),a._v(" 第五章：TCP 协议  (25 讲)")]),a._v(" "),r("h3",{attrs:{id:"_84-tcp-历史及其设计哲学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_84-tcp-历史及其设计哲学","aria-hidden":"true"}},[a._v("#")]),a._v(" 84 | TCP 历史及其设计哲学")]),a._v(" "),r("h3",{attrs:{id:"_85-tcp-解决了哪些问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_85-tcp-解决了哪些问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 85 | TCP 解决了哪些问题")]),a._v(" "),r("h3",{attrs:{id:"_86-tcp-报文格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_86-tcp-报文格式","aria-hidden":"true"}},[a._v("#")]),a._v(" 86 | TCP 报文格式")]),a._v(" "),r("h3",{attrs:{id:"_87-如何使用-tcpdump-分析网络报文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_87-如何使用-tcpdump-分析网络报文","aria-hidden":"true"}},[a._v("#")]),a._v(" 87 | 如何使用 tcpdump 分析网络报文")]),a._v(" "),r("h3",{attrs:{id:"_88-三次握手建立连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_88-三次握手建立连接","aria-hidden":"true"}},[a._v("#")]),a._v(" 88 | 三次握手建立连接")]),a._v(" "),r("h3",{attrs:{id:"_89-三次握手过程中的状态变迁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_89-三次握手过程中的状态变迁","aria-hidden":"true"}},[a._v("#")]),a._v(" 89 | 三次握手过程中的状态变迁")]),a._v(" "),r("h3",{attrs:{id:"_90-三次握手中的性能优化与安全问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_90-三次握手中的性能优化与安全问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 90 | 三次握手中的性能优化与安全问题")]),a._v(" "),r("h3",{attrs:{id:"_91-数据传输与-mss-分段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_91-数据传输与-mss-分段","aria-hidden":"true"}},[a._v("#")]),a._v(" 91 | 数据传输与 MSS 分段")]),a._v(" "),r("h3",{attrs:{id:"_92-重传与确认"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_92-重传与确认","aria-hidden":"true"}},[a._v("#")]),a._v(" 92 | 重传与确认")]),a._v(" "),r("h3",{attrs:{id:"_93-rto-重传定时器的计算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_93-rto-重传定时器的计算","aria-hidden":"true"}},[a._v("#")]),a._v(" 93 | RTO 重传定时器的计算")]),a._v(" "),r("h3",{attrs:{id:"_94-滑动窗口：发送窗口与接收窗口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_94-滑动窗口：发送窗口与接收窗口","aria-hidden":"true"}},[a._v("#")]),a._v(" 94 | 滑动窗口：发送窗口与接收窗口")]),a._v(" "),r("h3",{attrs:{id:"_95-窗口的滑动与流量控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_95-窗口的滑动与流量控制","aria-hidden":"true"}},[a._v("#")]),a._v(" 95 | 窗口的滑动与流量控制")]),a._v(" "),r("h3",{attrs:{id:"_96-操作系统缓冲区与滑动窗口的关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_96-操作系统缓冲区与滑动窗口的关系","aria-hidden":"true"}},[a._v("#")]),a._v(" 96 | 操作系统缓冲区与滑动窗口的关系")]),a._v(" "),r("h3",{attrs:{id:"_97-如何减少小报文提高网络效率"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_97-如何减少小报文提高网络效率","aria-hidden":"true"}},[a._v("#")]),a._v(" 97 | 如何减少小报文提高网络效率")]),a._v(" "),r("h3",{attrs:{id:"_98-拥塞控制（1）：慢启动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_98-拥塞控制（1）：慢启动","aria-hidden":"true"}},[a._v("#")]),a._v(" 98 | 拥塞控制（1）：慢启动")]),a._v(" "),r("h3",{attrs:{id:"_99-拥塞控制（2）：拥塞避免"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_99-拥塞控制（2）：拥塞避免","aria-hidden":"true"}},[a._v("#")]),a._v(" 99 | 拥塞控制（2）：拥塞避免")]),a._v(" "),r("h3",{attrs:{id:"_100-拥塞控制（3）：快速重传与快速恢复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_100-拥塞控制（3）：快速重传与快速恢复","aria-hidden":"true"}},[a._v("#")]),a._v(" 100 | 拥塞控制（3）：快速重传与快速恢复")]),a._v(" "),r("h3",{attrs:{id:"_101-sack-与选择性重传算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_101-sack-与选择性重传算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 101 | SACK 与选择性重传算法")]),a._v(" "),r("h3",{attrs:{id:"_102-从丢包到测量驱动的拥塞控制算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_102-从丢包到测量驱动的拥塞控制算法","aria-hidden":"true"}},[a._v("#")]),a._v(" 102 | 从丢包到测量驱动的拥塞控制算法")]),a._v(" "),r("h3",{attrs:{id:"_103-google-bbr-拥塞控制算法原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_103-google-bbr-拥塞控制算法原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 103 | Google BBR 拥塞控制算法原理")]),a._v(" "),r("h3",{attrs:{id:"_104-关闭连接过程优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_104-关闭连接过程优化","aria-hidden":"true"}},[a._v("#")]),a._v(" 104 | 关闭连接过程优化")]),a._v(" "),r("h3",{attrs:{id:"_105-优化关闭连接时的-time-wait-状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_105-优化关闭连接时的-time-wait-状态","aria-hidden":"true"}},[a._v("#")]),a._v(" 105 | 优化关闭连接时的 TIME-WAIT 状态")]),a._v(" "),r("h3",{attrs:{id:"_106-keepalive-、校验和及带外数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_106-keepalive-、校验和及带外数据","aria-hidden":"true"}},[a._v("#")]),a._v(" 106 | keepalive 、校验和及带外数据")]),a._v(" "),r("h3",{attrs:{id:"_107-面向字节流的-tcp-连接如何多路复用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_107-面向字节流的-tcp-连接如何多路复用","aria-hidden":"true"}},[a._v("#")]),a._v(" 107 | 面向字节流的 TCP 连接如何多路复用")]),a._v(" "),r("h3",{attrs:{id:"_108-四层负载均衡可以做什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_108-四层负载均衡可以做什么","aria-hidden":"true"}},[a._v("#")]),a._v(" 108 | 四层负载均衡可以做什么")]),a._v(" "),r("h2",{attrs:{id:"第六章：ip-协议-13-讲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第六章：ip-协议-13-讲","aria-hidden":"true"}},[a._v("#")]),a._v(" 第六章：IP 协议  (13 讲)")]),a._v(" "),r("h3",{attrs:{id:"_109-网络层与链路层的功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_109-网络层与链路层的功能","aria-hidden":"true"}},[a._v("#")]),a._v(" 109 | 网络层与链路层的功能")]),a._v(" "),r("h3",{attrs:{id:"_110-ipv4-分类地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_110-ipv4-分类地址","aria-hidden":"true"}},[a._v("#")]),a._v(" 110 | IPv4 分类地址")]),a._v(" "),r("h3",{attrs:{id:"_111-cidr-无分类地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_111-cidr-无分类地址","aria-hidden":"true"}},[a._v("#")]),a._v(" 111 | CIDR 无分类地址")]),a._v(" "),r("h3",{attrs:{id:"_112-ip-地址与链路地址的转换：arp-与-rarp-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_112-ip-地址与链路地址的转换：arp-与-rarp-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 112 | IP 地址与链路地址的转换：ARP 与 RARP 协议")]),a._v(" "),r("h3",{attrs:{id:"_113-nat-地址转换与-lvs-负载均衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_113-nat-地址转换与-lvs-负载均衡","aria-hidden":"true"}},[a._v("#")]),a._v(" 113 | NAT 地址转换与 LVS 负载均衡")]),a._v(" "),r("h3",{attrs:{id:"_114-ip-选路协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_114-ip-选路协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 114 | IP 选路协议")]),a._v(" "),r("h3",{attrs:{id:"_115-mtu-与-ip-报文分片"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_115-mtu-与-ip-报文分片","aria-hidden":"true"}},[a._v("#")]),a._v(" 115 | MTU 与 IP 报文分片")]),a._v(" "),r("h3",{attrs:{id:"_116-ip-协议的助手：icmp-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_116-ip-协议的助手：icmp-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 116 | IP 协议的助手：ICMP 协议")]),a._v(" "),r("h3",{attrs:{id:"_117-多播与-igmp-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_117-多播与-igmp-协议","aria-hidden":"true"}},[a._v("#")]),a._v(" 117 | 多播与 IGMP 协议")]),a._v(" "),r("h3",{attrs:{id:"_118-支持万物互联的-ipv6-地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_118-支持万物互联的-ipv6-地址","aria-hidden":"true"}},[a._v("#")]),a._v(" 118 | 支持万物互联的 IPv6 地址")]),a._v(" "),r("h3",{attrs:{id:"_119-ipv6-报文及分片"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_119-ipv6-报文及分片","aria-hidden":"true"}},[a._v("#")]),a._v(" 119 | IPv6 报文及分片")]),a._v(" "),r("h3",{attrs:{id:"_120-从-wireshark-报文统计中找规律"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_120-从-wireshark-报文统计中找规律","aria-hidden":"true"}},[a._v("#")]),a._v(" 120 | 从 wireshark 报文统计中找规律")]),a._v(" "),r("h3",{attrs:{id:"_121-结课测试-结束语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_121-结课测试-结束语","aria-hidden":"true"}},[a._v("#")]),a._v(' 121 | 结课测试&结束语"')])])},[],!1,null,null,null);t.default=s.exports}}]);